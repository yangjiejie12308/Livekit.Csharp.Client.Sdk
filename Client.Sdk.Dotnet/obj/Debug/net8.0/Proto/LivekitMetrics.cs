// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/livekit_metrics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LiveKit.Proto {

  /// <summary>Holder for reflection information generated from Proto/livekit_metrics.proto</summary>
  public static partial class LivekitMetricsReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/livekit_metrics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LivekitMetricsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtQcm90by9saXZla2l0X21ldHJpY3MucHJvdG8SB2xpdmVraXQaH2dvb2ds",
            "ZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8ixgEKDE1ldHJpY3NCYXRjaBIU",
            "Cgx0aW1lc3RhbXBfbXMYASABKAMSOAoUbm9ybWFsaXplZF90aW1lc3RhbXAY",
            "AiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhAKCHN0cl9kYXRh",
            "GAMgAygJEi4KC3RpbWVfc2VyaWVzGAQgAygLMhkubGl2ZWtpdC5UaW1lU2Vy",
            "aWVzTWV0cmljEiQKBmV2ZW50cxgFIAMoCzIULmxpdmVraXQuRXZlbnRNZXRy",
            "aWMihwEKEFRpbWVTZXJpZXNNZXRyaWMSDQoFbGFiZWwYASABKA0SHAoUcGFy",
            "dGljaXBhbnRfaWRlbnRpdHkYAiABKA0SEQoJdHJhY2tfc2lkGAMgASgNEiYK",
            "B3NhbXBsZXMYBCADKAsyFS5saXZla2l0Lk1ldHJpY1NhbXBsZRILCgNyaWQY",
            "BSABKA0ibQoMTWV0cmljU2FtcGxlEhQKDHRpbWVzdGFtcF9tcxgBIAEoAxI4",
            "ChRub3JtYWxpemVkX3RpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASDQoFdmFsdWUYAyABKAIi3AIKC0V2ZW50TWV0cmljEg0K",
            "BWxhYmVsGAEgASgNEhwKFHBhcnRpY2lwYW50X2lkZW50aXR5GAIgASgNEhEK",
            "CXRyYWNrX3NpZBgDIAEoDRIaChJzdGFydF90aW1lc3RhbXBfbXMYBCABKAMS",
            "HQoQZW5kX3RpbWVzdGFtcF9tcxgFIAEoA0gAiAEBEj4KGm5vcm1hbGl6ZWRf",
            "c3RhcnRfdGltZXN0YW1wGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBJBChhub3JtYWxpemVkX2VuZF90aW1lc3RhbXAYByABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wSAGIAQESEAoIbWV0YWRhdGEYCCABKAkS",
            "CwoDcmlkGAkgASgNQhMKEV9lbmRfdGltZXN0YW1wX21zQhsKGV9ub3JtYWxp",
            "emVkX2VuZF90aW1lc3RhbXAqgQcKC01ldHJpY0xhYmVsEhMKD0FHRU5UU19M",
            "TE1fVFRGVBAAEhMKD0FHRU5UU19TVFRfVFRGVBABEhMKD0FHRU5UU19UVFNf",
            "VFRGQhACEigKJENMSUVOVF9WSURFT19TVUJTQ1JJQkVSX0ZSRUVaRV9DT1VO",
            "VBADEjEKLUNMSUVOVF9WSURFT19TVUJTQ1JJQkVSX1RPVEFMX0ZSRUVaRV9E",
            "VVJBVElPThAEEicKI0NMSUVOVF9WSURFT19TVUJTQ1JJQkVSX1BBVVNFX0NP",
            "VU5UEAUSMQotQ0xJRU5UX1ZJREVPX1NVQlNDUklCRVJfVE9UQUxfUEFVU0VT",
            "X0RVUkFUSU9OEAYSLQopQ0xJRU5UX0FVRElPX1NVQlNDUklCRVJfQ09OQ0VB",
            "TEVEX1NBTVBMRVMQBxI0CjBDTElFTlRfQVVESU9fU1VCU0NSSUJFUl9TSUxF",
            "TlRfQ09OQ0VBTEVEX1NBTVBMRVMQCBIuCipDTElFTlRfQVVESU9fU1VCU0NS",
            "SUJFUl9DT05DRUFMTUVOVF9FVkVOVFMQCRIuCipDTElFTlRfQVVESU9fU1VC",
            "U0NSSUJFUl9JTlRFUlJVUFRJT05fQ09VTlQQChI3CjNDTElFTlRfQVVESU9f",
            "U1VCU0NSSUJFUl9UT1RBTF9JTlRFUlJVUFRJT05fRFVSQVRJT04QCxIpCiVD",
            "TElFTlRfU1VCU0NSSUJFUl9KSVRURVJfQlVGRkVSX0RFTEFZEAwSMQotQ0xJ",
            "RU5UX1NVQlNDUklCRVJfSklUVEVSX0JVRkZFUl9FTUlUVEVEX0NPVU5UEA0S",
            "QAo8Q0xJRU5UX1ZJREVPX1BVQkxJU0hFUl9RVUFMSVRZX0xJTUlUQVRJT05f",
            "RFVSQVRJT05fQkFORFdJRFRIEA4SOgo2Q0xJRU5UX1ZJREVPX1BVQkxJU0hF",
            "Ul9RVUFMSVRZX0xJTUlUQVRJT05fRFVSQVRJT05fQ1BVEA8SPAo4Q0xJRU5U",
            "X1ZJREVPX1BVQkxJU0hFUl9RVUFMSVRZX0xJTUlUQVRJT05fRFVSQVRJT05f",
            "T1RIRVIQEBIRCg1QVUJMSVNIRVJfUlRUEBESEwoPU0VSVkVSX01FU0hfUlRU",
            "EBISEgoOU1VCU0NSSUJFUl9SVFQQExImCiFNRVRSSUNfTEFCRUxfUFJFREVG",
            "SU5FRF9NQVhfVkFMVUUQgCBCRlojZ2l0aHViLmNvbS9saXZla2l0L3Byb3Rv",
            "Y29sL2xpdmVraXSqAg1MaXZlS2l0LlByb3Rv6gIOTGl2ZUtpdDo6UHJvdG9i",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LiveKit.Proto.MetricLabel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.MetricsBatch), global::LiveKit.Proto.MetricsBatch.Parser, new[]{ "TimestampMs", "NormalizedTimestamp", "StrData", "TimeSeries", "Events" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.TimeSeriesMetric), global::LiveKit.Proto.TimeSeriesMetric.Parser, new[]{ "Label", "ParticipantIdentity", "TrackSid", "Samples", "Rid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.MetricSample), global::LiveKit.Proto.MetricSample.Parser, new[]{ "TimestampMs", "NormalizedTimestamp", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiveKit.Proto.EventMetric), global::LiveKit.Proto.EventMetric.Parser, new[]{ "Label", "ParticipantIdentity", "TrackSid", "StartTimestampMs", "EndTimestampMs", "NormalizedStartTimestamp", "NormalizedEndTimestamp", "Metadata", "Rid" }, new[]{ "EndTimestampMs", "NormalizedEndTimestamp" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// index from [0: MAX_LABEL_PREDEFINED_MAX_VALUE) are for predefined labels (`MetricLabel`)
  /// </summary>
  public enum MetricLabel {
    /// <summary>
    /// time to first token from LLM
    /// </summary>
    [pbr::OriginalName("AGENTS_LLM_TTFT")] AgentsLlmTtft = 0,
    /// <summary>
    /// time to final transcription
    /// </summary>
    [pbr::OriginalName("AGENTS_STT_TTFT")] AgentsSttTtft = 1,
    /// <summary>
    /// time to first byte
    /// </summary>
    [pbr::OriginalName("AGENTS_TTS_TTFB")] AgentsTtsTtfb = 2,
    /// <summary>
    /// Number of video freezes
    /// </summary>
    [pbr::OriginalName("CLIENT_VIDEO_SUBSCRIBER_FREEZE_COUNT")] ClientVideoSubscriberFreezeCount = 3,
    /// <summary>
    /// total duration of freezes
    /// </summary>
    [pbr::OriginalName("CLIENT_VIDEO_SUBSCRIBER_TOTAL_FREEZE_DURATION")] ClientVideoSubscriberTotalFreezeDuration = 4,
    /// <summary>
    /// number of video pauses
    /// </summary>
    [pbr::OriginalName("CLIENT_VIDEO_SUBSCRIBER_PAUSE_COUNT")] ClientVideoSubscriberPauseCount = 5,
    /// <summary>
    /// total duration of pauses
    /// </summary>
    [pbr::OriginalName("CLIENT_VIDEO_SUBSCRIBER_TOTAL_PAUSES_DURATION")] ClientVideoSubscriberTotalPausesDuration = 6,
    /// <summary>
    /// number of concealed (synthesized) audio samples
    /// </summary>
    [pbr::OriginalName("CLIENT_AUDIO_SUBSCRIBER_CONCEALED_SAMPLES")] ClientAudioSubscriberConcealedSamples = 7,
    /// <summary>
    /// number of silent concealed samples
    /// </summary>
    [pbr::OriginalName("CLIENT_AUDIO_SUBSCRIBER_SILENT_CONCEALED_SAMPLES")] ClientAudioSubscriberSilentConcealedSamples = 8,
    /// <summary>
    /// number of concealment events
    /// </summary>
    [pbr::OriginalName("CLIENT_AUDIO_SUBSCRIBER_CONCEALMENT_EVENTS")] ClientAudioSubscriberConcealmentEvents = 9,
    /// <summary>
    /// number of interruptions
    /// </summary>
    [pbr::OriginalName("CLIENT_AUDIO_SUBSCRIBER_INTERRUPTION_COUNT")] ClientAudioSubscriberInterruptionCount = 10,
    /// <summary>
    /// total duration of interruptions
    /// </summary>
    [pbr::OriginalName("CLIENT_AUDIO_SUBSCRIBER_TOTAL_INTERRUPTION_DURATION")] ClientAudioSubscriberTotalInterruptionDuration = 11,
    /// <summary>
    /// total time spent in jitter buffer
    /// </summary>
    [pbr::OriginalName("CLIENT_SUBSCRIBER_JITTER_BUFFER_DELAY")] ClientSubscriberJitterBufferDelay = 12,
    /// <summary>
    /// total time spent in jitter buffer
    /// </summary>
    [pbr::OriginalName("CLIENT_SUBSCRIBER_JITTER_BUFFER_EMITTED_COUNT")] ClientSubscriberJitterBufferEmittedCount = 13,
    /// <summary>
    /// total duration spent in bandwidth quality limitation
    /// </summary>
    [pbr::OriginalName("CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_BANDWIDTH")] ClientVideoPublisherQualityLimitationDurationBandwidth = 14,
    /// <summary>
    /// total duration spent in cpu quality limitation
    /// </summary>
    [pbr::OriginalName("CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_CPU")] ClientVideoPublisherQualityLimitationDurationCpu = 15,
    /// <summary>
    /// total duration spent in other quality limitation
    /// </summary>
    [pbr::OriginalName("CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_OTHER")] ClientVideoPublisherQualityLimitationDurationOther = 16,
    /// <summary>
    /// Publisher RTT (participant -> server)
    /// </summary>
    [pbr::OriginalName("PUBLISHER_RTT")] PublisherRtt = 17,
    /// <summary>
    /// RTT between publisher node and subscriber node (could involve intermedia node(s))
    /// </summary>
    [pbr::OriginalName("SERVER_MESH_RTT")] ServerMeshRtt = 18,
    /// <summary>
    /// Subscribe RTT (server -> participant)
    /// </summary>
    [pbr::OriginalName("SUBSCRIBER_RTT")] SubscriberRtt = 19,
    [pbr::OriginalName("METRIC_LABEL_PREDEFINED_MAX_VALUE")] PredefinedMaxValue = 4096,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MetricsBatch : pb::IMessage<MetricsBatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetricsBatch> _parser = new pb::MessageParser<MetricsBatch>(() => new MetricsBatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MetricsBatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.LivekitMetricsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetricsBatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetricsBatch(MetricsBatch other) : this() {
      timestampMs_ = other.timestampMs_;
      normalizedTimestamp_ = other.normalizedTimestamp_ != null ? other.normalizedTimestamp_.Clone() : null;
      strData_ = other.strData_.Clone();
      timeSeries_ = other.timeSeries_.Clone();
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetricsBatch Clone() {
      return new MetricsBatch(this);
    }

    /// <summary>Field number for the "timestamp_ms" field.</summary>
    public const int TimestampMsFieldNumber = 1;
    private long timestampMs_;
    /// <summary>
    /// time at which this batch is sent based on a monotonic clock (millisecond resolution)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    /// <summary>Field number for the "normalized_timestamp" field.</summary>
    public const int NormalizedTimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp normalizedTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NormalizedTimestamp {
      get { return normalizedTimestamp_; }
      set {
        normalizedTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "str_data" field.</summary>
    public const int StrDataFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_strData_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> strData_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// To avoid repeating string values, we store them in a separate list and reference them by index
    /// This is useful for storing participant identities, track names, etc.
    /// There is also a predefined list of labels that can be used to reference common metrics.
    /// They have reserved indices from 0 to (METRIC_LABEL_PREDEFINED_MAX_VALUE - 1).
    /// Indexes pointing at str_data should start from METRIC_LABEL_PREDEFINED_MAX_VALUE, 
    /// such that str_data[0] == index of METRIC_LABEL_PREDEFINED_MAX_VALUE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> StrData {
      get { return strData_; }
    }

    /// <summary>Field number for the "time_series" field.</summary>
    public const int TimeSeriesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LiveKit.Proto.TimeSeriesMetric> _repeated_timeSeries_codec
        = pb::FieldCodec.ForMessage(34, global::LiveKit.Proto.TimeSeriesMetric.Parser);
    private readonly pbc::RepeatedField<global::LiveKit.Proto.TimeSeriesMetric> timeSeries_ = new pbc::RepeatedField<global::LiveKit.Proto.TimeSeriesMetric>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LiveKit.Proto.TimeSeriesMetric> TimeSeries {
      get { return timeSeries_; }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::LiveKit.Proto.EventMetric> _repeated_events_codec
        = pb::FieldCodec.ForMessage(42, global::LiveKit.Proto.EventMetric.Parser);
    private readonly pbc::RepeatedField<global::LiveKit.Proto.EventMetric> events_ = new pbc::RepeatedField<global::LiveKit.Proto.EventMetric>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LiveKit.Proto.EventMetric> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MetricsBatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MetricsBatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimestampMs != other.TimestampMs) return false;
      if (!object.Equals(NormalizedTimestamp, other.NormalizedTimestamp)) return false;
      if(!strData_.Equals(other.strData_)) return false;
      if(!timeSeries_.Equals(other.timeSeries_)) return false;
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimestampMs != 0L) hash ^= TimestampMs.GetHashCode();
      if (normalizedTimestamp_ != null) hash ^= NormalizedTimestamp.GetHashCode();
      hash ^= strData_.GetHashCode();
      hash ^= timeSeries_.GetHashCode();
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimestampMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TimestampMs);
      }
      if (normalizedTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NormalizedTimestamp);
      }
      strData_.WriteTo(output, _repeated_strData_codec);
      timeSeries_.WriteTo(output, _repeated_timeSeries_codec);
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimestampMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TimestampMs);
      }
      if (normalizedTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NormalizedTimestamp);
      }
      strData_.WriteTo(ref output, _repeated_strData_codec);
      timeSeries_.WriteTo(ref output, _repeated_timeSeries_codec);
      events_.WriteTo(ref output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampMs);
      }
      if (normalizedTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NormalizedTimestamp);
      }
      size += strData_.CalculateSize(_repeated_strData_codec);
      size += timeSeries_.CalculateSize(_repeated_timeSeries_codec);
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MetricsBatch other) {
      if (other == null) {
        return;
      }
      if (other.TimestampMs != 0L) {
        TimestampMs = other.TimestampMs;
      }
      if (other.normalizedTimestamp_ != null) {
        if (normalizedTimestamp_ == null) {
          NormalizedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NormalizedTimestamp.MergeFrom(other.NormalizedTimestamp);
      }
      strData_.Add(other.strData_);
      timeSeries_.Add(other.timeSeries_);
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimestampMs = input.ReadInt64();
            break;
          }
          case 18: {
            if (normalizedTimestamp_ == null) {
              NormalizedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NormalizedTimestamp);
            break;
          }
          case 26: {
            strData_.AddEntriesFrom(input, _repeated_strData_codec);
            break;
          }
          case 34: {
            timeSeries_.AddEntriesFrom(input, _repeated_timeSeries_codec);
            break;
          }
          case 42: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimestampMs = input.ReadInt64();
            break;
          }
          case 18: {
            if (normalizedTimestamp_ == null) {
              NormalizedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NormalizedTimestamp);
            break;
          }
          case 26: {
            strData_.AddEntriesFrom(ref input, _repeated_strData_codec);
            break;
          }
          case 34: {
            timeSeries_.AddEntriesFrom(ref input, _repeated_timeSeries_codec);
            break;
          }
          case 42: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TimeSeriesMetric : pb::IMessage<TimeSeriesMetric>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimeSeriesMetric> _parser = new pb::MessageParser<TimeSeriesMetric>(() => new TimeSeriesMetric());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TimeSeriesMetric> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.LivekitMetricsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeSeriesMetric() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeSeriesMetric(TimeSeriesMetric other) : this() {
      label_ = other.label_;
      participantIdentity_ = other.participantIdentity_;
      trackSid_ = other.trackSid_;
      samples_ = other.samples_.Clone();
      rid_ = other.rid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeSeriesMetric Clone() {
      return new TimeSeriesMetric(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private uint label_;
    /// <summary>
    /// Metric name e.g "speech_probablity". The string value is not directly stored in the message, but referenced by index
    /// in the `str_data` field of `MetricsBatch`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    /// <summary>Field number for the "participant_identity" field.</summary>
    public const int ParticipantIdentityFieldNumber = 2;
    private uint participantIdentity_;
    /// <summary>
    /// index into `str_data`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ParticipantIdentity {
      get { return participantIdentity_; }
      set {
        participantIdentity_ = value;
      }
    }

    /// <summary>Field number for the "track_sid" field.</summary>
    public const int TrackSidFieldNumber = 3;
    private uint trackSid_;
    /// <summary>
    /// index into `str_data`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrackSid {
      get { return trackSid_; }
      set {
        trackSid_ = value;
      }
    }

    /// <summary>Field number for the "samples" field.</summary>
    public const int SamplesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LiveKit.Proto.MetricSample> _repeated_samples_codec
        = pb::FieldCodec.ForMessage(34, global::LiveKit.Proto.MetricSample.Parser);
    private readonly pbc::RepeatedField<global::LiveKit.Proto.MetricSample> samples_ = new pbc::RepeatedField<global::LiveKit.Proto.MetricSample>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LiveKit.Proto.MetricSample> Samples {
      get { return samples_; }
    }

    /// <summary>Field number for the "rid" field.</summary>
    public const int RidFieldNumber = 5;
    private uint rid_;
    /// <summary>
    /// index into 'str_data'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rid {
      get { return rid_; }
      set {
        rid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TimeSeriesMetric);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TimeSeriesMetric other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (ParticipantIdentity != other.ParticipantIdentity) return false;
      if (TrackSid != other.TrackSid) return false;
      if(!samples_.Equals(other.samples_)) return false;
      if (Rid != other.Rid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Label != 0) hash ^= Label.GetHashCode();
      if (ParticipantIdentity != 0) hash ^= ParticipantIdentity.GetHashCode();
      if (TrackSid != 0) hash ^= TrackSid.GetHashCode();
      hash ^= samples_.GetHashCode();
      if (Rid != 0) hash ^= Rid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Label != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Label);
      }
      if (ParticipantIdentity != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ParticipantIdentity);
      }
      if (TrackSid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TrackSid);
      }
      samples_.WriteTo(output, _repeated_samples_codec);
      if (Rid != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Rid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Label != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Label);
      }
      if (ParticipantIdentity != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ParticipantIdentity);
      }
      if (TrackSid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TrackSid);
      }
      samples_.WriteTo(ref output, _repeated_samples_codec);
      if (Rid != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Rid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Label != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Label);
      }
      if (ParticipantIdentity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ParticipantIdentity);
      }
      if (TrackSid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TrackSid);
      }
      size += samples_.CalculateSize(_repeated_samples_codec);
      if (Rid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TimeSeriesMetric other) {
      if (other == null) {
        return;
      }
      if (other.Label != 0) {
        Label = other.Label;
      }
      if (other.ParticipantIdentity != 0) {
        ParticipantIdentity = other.ParticipantIdentity;
      }
      if (other.TrackSid != 0) {
        TrackSid = other.TrackSid;
      }
      samples_.Add(other.samples_);
      if (other.Rid != 0) {
        Rid = other.Rid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Label = input.ReadUInt32();
            break;
          }
          case 16: {
            ParticipantIdentity = input.ReadUInt32();
            break;
          }
          case 24: {
            TrackSid = input.ReadUInt32();
            break;
          }
          case 34: {
            samples_.AddEntriesFrom(input, _repeated_samples_codec);
            break;
          }
          case 40: {
            Rid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Label = input.ReadUInt32();
            break;
          }
          case 16: {
            ParticipantIdentity = input.ReadUInt32();
            break;
          }
          case 24: {
            TrackSid = input.ReadUInt32();
            break;
          }
          case 34: {
            samples_.AddEntriesFrom(ref input, _repeated_samples_codec);
            break;
          }
          case 40: {
            Rid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MetricSample : pb::IMessage<MetricSample>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetricSample> _parser = new pb::MessageParser<MetricSample>(() => new MetricSample());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MetricSample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.LivekitMetricsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetricSample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetricSample(MetricSample other) : this() {
      timestampMs_ = other.timestampMs_;
      normalizedTimestamp_ = other.normalizedTimestamp_ != null ? other.normalizedTimestamp_.Clone() : null;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetricSample Clone() {
      return new MetricSample(this);
    }

    /// <summary>Field number for the "timestamp_ms" field.</summary>
    public const int TimestampMsFieldNumber = 1;
    private long timestampMs_;
    /// <summary>
    /// time of metric based on a monotonic clock (in milliseconds)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    /// <summary>Field number for the "normalized_timestamp" field.</summary>
    public const int NormalizedTimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp normalizedTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NormalizedTimestamp {
      get { return normalizedTimestamp_; }
      set {
        normalizedTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MetricSample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MetricSample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimestampMs != other.TimestampMs) return false;
      if (!object.Equals(NormalizedTimestamp, other.NormalizedTimestamp)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimestampMs != 0L) hash ^= TimestampMs.GetHashCode();
      if (normalizedTimestamp_ != null) hash ^= NormalizedTimestamp.GetHashCode();
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimestampMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TimestampMs);
      }
      if (normalizedTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NormalizedTimestamp);
      }
      if (Value != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimestampMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TimestampMs);
      }
      if (normalizedTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NormalizedTimestamp);
      }
      if (Value != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampMs);
      }
      if (normalizedTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NormalizedTimestamp);
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MetricSample other) {
      if (other == null) {
        return;
      }
      if (other.TimestampMs != 0L) {
        TimestampMs = other.TimestampMs;
      }
      if (other.normalizedTimestamp_ != null) {
        if (normalizedTimestamp_ == null) {
          NormalizedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NormalizedTimestamp.MergeFrom(other.NormalizedTimestamp);
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimestampMs = input.ReadInt64();
            break;
          }
          case 18: {
            if (normalizedTimestamp_ == null) {
              NormalizedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NormalizedTimestamp);
            break;
          }
          case 29: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimestampMs = input.ReadInt64();
            break;
          }
          case 18: {
            if (normalizedTimestamp_ == null) {
              NormalizedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NormalizedTimestamp);
            break;
          }
          case 29: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EventMetric : pb::IMessage<EventMetric>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMetric> _parser = new pb::MessageParser<EventMetric>(() => new EventMetric());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventMetric> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiveKit.Proto.LivekitMetricsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventMetric() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventMetric(EventMetric other) : this() {
      _hasBits0 = other._hasBits0;
      label_ = other.label_;
      participantIdentity_ = other.participantIdentity_;
      trackSid_ = other.trackSid_;
      startTimestampMs_ = other.startTimestampMs_;
      endTimestampMs_ = other.endTimestampMs_;
      normalizedStartTimestamp_ = other.normalizedStartTimestamp_ != null ? other.normalizedStartTimestamp_.Clone() : null;
      normalizedEndTimestamp_ = other.normalizedEndTimestamp_ != null ? other.normalizedEndTimestamp_.Clone() : null;
      metadata_ = other.metadata_;
      rid_ = other.rid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventMetric Clone() {
      return new EventMetric(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private uint label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    /// <summary>Field number for the "participant_identity" field.</summary>
    public const int ParticipantIdentityFieldNumber = 2;
    private uint participantIdentity_;
    /// <summary>
    /// index into `str_data`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ParticipantIdentity {
      get { return participantIdentity_; }
      set {
        participantIdentity_ = value;
      }
    }

    /// <summary>Field number for the "track_sid" field.</summary>
    public const int TrackSidFieldNumber = 3;
    private uint trackSid_;
    /// <summary>
    /// index into `str_data`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TrackSid {
      get { return trackSid_; }
      set {
        trackSid_ = value;
      }
    }

    /// <summary>Field number for the "start_timestamp_ms" field.</summary>
    public const int StartTimestampMsFieldNumber = 4;
    private long startTimestampMs_;
    /// <summary>
    /// start time of event based on a monotonic clock (in milliseconds)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTimestampMs {
      get { return startTimestampMs_; }
      set {
        startTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "end_timestamp_ms" field.</summary>
    public const int EndTimestampMsFieldNumber = 5;
    private readonly static long EndTimestampMsDefaultValue = 0L;

    private long endTimestampMs_;
    /// <summary>
    /// end time of event based on a monotonic clock (in milliseconds), if needed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTimestampMs {
      get { if ((_hasBits0 & 1) != 0) { return endTimestampMs_; } else { return EndTimestampMsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        endTimestampMs_ = value;
      }
    }
    /// <summary>Gets whether the "end_timestamp_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTimestampMs {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "end_timestamp_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTimestampMs() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "normalized_start_timestamp" field.</summary>
    public const int NormalizedStartTimestampFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp normalizedStartTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NormalizedStartTimestamp {
      get { return normalizedStartTimestamp_; }
      set {
        normalizedStartTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "normalized_end_timestamp" field.</summary>
    public const int NormalizedEndTimestampFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp normalizedEndTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NormalizedEndTimestamp {
      get { return normalizedEndTimestamp_; }
      set {
        normalizedEndTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 8;
    private string metadata_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rid" field.</summary>
    public const int RidFieldNumber = 9;
    private uint rid_;
    /// <summary>
    /// index into 'str_data'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rid {
      get { return rid_; }
      set {
        rid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventMetric);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventMetric other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (ParticipantIdentity != other.ParticipantIdentity) return false;
      if (TrackSid != other.TrackSid) return false;
      if (StartTimestampMs != other.StartTimestampMs) return false;
      if (EndTimestampMs != other.EndTimestampMs) return false;
      if (!object.Equals(NormalizedStartTimestamp, other.NormalizedStartTimestamp)) return false;
      if (!object.Equals(NormalizedEndTimestamp, other.NormalizedEndTimestamp)) return false;
      if (Metadata != other.Metadata) return false;
      if (Rid != other.Rid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Label != 0) hash ^= Label.GetHashCode();
      if (ParticipantIdentity != 0) hash ^= ParticipantIdentity.GetHashCode();
      if (TrackSid != 0) hash ^= TrackSid.GetHashCode();
      if (StartTimestampMs != 0L) hash ^= StartTimestampMs.GetHashCode();
      if (HasEndTimestampMs) hash ^= EndTimestampMs.GetHashCode();
      if (normalizedStartTimestamp_ != null) hash ^= NormalizedStartTimestamp.GetHashCode();
      if (normalizedEndTimestamp_ != null) hash ^= NormalizedEndTimestamp.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (Rid != 0) hash ^= Rid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Label != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Label);
      }
      if (ParticipantIdentity != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ParticipantIdentity);
      }
      if (TrackSid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TrackSid);
      }
      if (StartTimestampMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StartTimestampMs);
      }
      if (HasEndTimestampMs) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTimestampMs);
      }
      if (normalizedStartTimestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(NormalizedStartTimestamp);
      }
      if (normalizedEndTimestamp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NormalizedEndTimestamp);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Metadata);
      }
      if (Rid != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Rid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Label != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Label);
      }
      if (ParticipantIdentity != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ParticipantIdentity);
      }
      if (TrackSid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TrackSid);
      }
      if (StartTimestampMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StartTimestampMs);
      }
      if (HasEndTimestampMs) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTimestampMs);
      }
      if (normalizedStartTimestamp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(NormalizedStartTimestamp);
      }
      if (normalizedEndTimestamp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NormalizedEndTimestamp);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Metadata);
      }
      if (Rid != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Rid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Label != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Label);
      }
      if (ParticipantIdentity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ParticipantIdentity);
      }
      if (TrackSid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TrackSid);
      }
      if (StartTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimestampMs);
      }
      if (HasEndTimestampMs) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTimestampMs);
      }
      if (normalizedStartTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NormalizedStartTimestamp);
      }
      if (normalizedEndTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NormalizedEndTimestamp);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Metadata);
      }
      if (Rid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventMetric other) {
      if (other == null) {
        return;
      }
      if (other.Label != 0) {
        Label = other.Label;
      }
      if (other.ParticipantIdentity != 0) {
        ParticipantIdentity = other.ParticipantIdentity;
      }
      if (other.TrackSid != 0) {
        TrackSid = other.TrackSid;
      }
      if (other.StartTimestampMs != 0L) {
        StartTimestampMs = other.StartTimestampMs;
      }
      if (other.HasEndTimestampMs) {
        EndTimestampMs = other.EndTimestampMs;
      }
      if (other.normalizedStartTimestamp_ != null) {
        if (normalizedStartTimestamp_ == null) {
          NormalizedStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NormalizedStartTimestamp.MergeFrom(other.NormalizedStartTimestamp);
      }
      if (other.normalizedEndTimestamp_ != null) {
        if (normalizedEndTimestamp_ == null) {
          NormalizedEndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NormalizedEndTimestamp.MergeFrom(other.NormalizedEndTimestamp);
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      if (other.Rid != 0) {
        Rid = other.Rid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Label = input.ReadUInt32();
            break;
          }
          case 16: {
            ParticipantIdentity = input.ReadUInt32();
            break;
          }
          case 24: {
            TrackSid = input.ReadUInt32();
            break;
          }
          case 32: {
            StartTimestampMs = input.ReadInt64();
            break;
          }
          case 40: {
            EndTimestampMs = input.ReadInt64();
            break;
          }
          case 50: {
            if (normalizedStartTimestamp_ == null) {
              NormalizedStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NormalizedStartTimestamp);
            break;
          }
          case 58: {
            if (normalizedEndTimestamp_ == null) {
              NormalizedEndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NormalizedEndTimestamp);
            break;
          }
          case 66: {
            Metadata = input.ReadString();
            break;
          }
          case 72: {
            Rid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Label = input.ReadUInt32();
            break;
          }
          case 16: {
            ParticipantIdentity = input.ReadUInt32();
            break;
          }
          case 24: {
            TrackSid = input.ReadUInt32();
            break;
          }
          case 32: {
            StartTimestampMs = input.ReadInt64();
            break;
          }
          case 40: {
            EndTimestampMs = input.ReadInt64();
            break;
          }
          case 50: {
            if (normalizedStartTimestamp_ == null) {
              NormalizedStartTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NormalizedStartTimestamp);
            break;
          }
          case 58: {
            if (normalizedEndTimestamp_ == null) {
              NormalizedEndTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NormalizedEndTimestamp);
            break;
          }
          case 66: {
            Metadata = input.ReadString();
            break;
          }
          case 72: {
            Rid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
